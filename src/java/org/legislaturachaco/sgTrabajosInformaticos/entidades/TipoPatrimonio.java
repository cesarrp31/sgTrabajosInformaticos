//
// This file was generated by the JPA Modeler
//
package org.legislaturachaco.sgTrabajosInformaticos.entidades;

import java.io.Serializable;
import java.util.List;
import java.util.Objects;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

@Entity
@Table(name = "tipoPatrimonio")

public class TipoPatrimonio implements Serializable {
    public static final int LON_MAX_TIPO= 45,
                            LONG_MAX_DESCRIPCION= 100;
    

    @Column(name = "descripcion", table = "tipoPatrimonio", length = 100)
    @Basic
    private String descripcion;

    @OneToMany(targetEntity = Patrimonios.class, mappedBy = "idTipo")
    private List<Patrimonios> patrimoniosCollection;

    @Column(name = "tipo", table = "tipoPatrimonio", nullable = false, length = 45)
    @Basic
    private String tipo;

    @Column(name = "idTipo", table = "tipoPatrimonio", nullable = false)
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Integer idTipo;

    public TipoPatrimonio() {

    }

    public String getDescripcion() {
        return this.descripcion;
    }

    public void setDescripcion(String descripcion) {
        this.descripcion = descripcion;
    }

    public List<Patrimonios> getPatrimoniosCollection() {
        return this.patrimoniosCollection;
    }

    public void setPatrimoniosCollection(List<Patrimonios> patrimoniosCollection) {
        this.patrimoniosCollection = patrimoniosCollection;
    }

    public String getTipo() {
        return this.tipo;
    }

    public void setTipo(String tipo) {
        this.tipo = tipo;
    }

    public Integer getIdTipo() {
        return this.idTipo;
    }

    public void setIdTipo(Integer idTipo) {
        this.idTipo = idTipo;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 89 * hash + Objects.hashCode(this.idTipo);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final TipoPatrimonio other = (TipoPatrimonio) obj;
        if (!Objects.equals(this.idTipo, other.idTipo)) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return tipo;
    }
    
}
