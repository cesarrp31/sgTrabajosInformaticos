//
// This file was generated by the JPA Modeler
//
package org.legislaturachaco.sgTrabajosInformaticos.entidades;

import java.io.Serializable;
import java.util.Objects;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

@Entity
@Table(name = "permisos", uniqueConstraints = @UniqueConstraint(columnNames = {"idRol", "tabla"}))

public class Permisos implements Serializable {

    @Column(name = "elimincacion", table = "permisos", nullable = false)
    @Basic
    private boolean elimincacion;

    @ManyToOne(optional = false, targetEntity = Roles.class)
    @JoinColumn(name = "idRol")
    private Roles idRol;

    @Column(name = "idPermiso", table = "permisos", nullable = false)
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Integer idPermiso;

    @Column(name = "modificacion", table = "permisos", nullable = false)
    @Basic
    private boolean modificacion;

    @Column(name = "escritura", table = "permisos", nullable = false)
    @Basic
    private boolean escritura;

    @ManyToOne(optional = false, targetEntity = Tablas.class)
    @JoinColumn(name = "tabla")
    private Tablas tabla;

    @Column(name = "lectura", table = "permisos", nullable = false)
    @Basic
    private boolean lectura;

    public Permisos() {

    }

    public boolean isElimincacion() {
        return this.elimincacion;
    }

    public void setElimincacion(boolean elimincacion) {
        this.elimincacion = elimincacion;
    }

    public Roles getIdRol() {
        return this.idRol;
    }

    public void setIdRol(Roles idRol) {
        this.idRol = idRol;
    }

    public Integer getIdPermiso() {
        return this.idPermiso;
    }

    public void setIdPermiso(Integer idPermiso) {
        this.idPermiso = idPermiso;
    }

    public boolean isModificacion() {
        return this.modificacion;
    }

    public void setModificacion(boolean modificacion) {
        this.modificacion = modificacion;
    }

    public boolean isEscritura() {
        return this.escritura;
    }

    public void setEscritura(boolean escritura) {
        this.escritura = escritura;
    }

    public Tablas getTabla() {
        return this.tabla;
    }

    public void setTabla(Tablas tabla) {
        this.tabla = tabla;
    }

    public boolean isLectura() {
        return this.lectura;
    }

    public void setLectura(boolean lectura) {
        this.lectura = lectura;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 47 * hash + Objects.hashCode(this.idPermiso);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final Permisos other = (Permisos) obj;
        if (!Objects.equals(this.idPermiso, other.idPermiso)) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "Permisos{" + "elimincacion=" + elimincacion + ", idRol=" + idRol + ", idPermiso=" + idPermiso + ", modificacion=" + modificacion + ", escritura=" + escritura + ", tabla=" + tabla + ", lectura=" + lectura + '}';
    }
    
}
