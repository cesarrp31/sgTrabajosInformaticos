//
// This file was generated by the JPA Modeler
//
package org.legislaturachaco.sgTrabajosInformaticos.entidades;

import java.io.Serializable;
import java.util.List;
import java.util.Objects;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

@Entity
@Table(name = "problemasN2", uniqueConstraints = @UniqueConstraint(columnNames = {"idProblemaN1", "idProblemaN2"}))

public class ProblemasN2 implements Serializable {
    
    public static final int LONG_MAX_PROBLEMA= 45;

    @OneToMany(targetEntity = ProblemasN3.class, mappedBy = "idProblemaN2")
    private List<ProblemasN3> problemasN3Collection;

    @ManyToOne(optional = false, targetEntity = ProblemasN1.class)
    @JoinColumn(name = "idProblemaN1")
    private ProblemasN1 idProblemaN1;

    @Column(name = "idProblemaN2", table = "problemasN2", nullable = false)
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Integer idProblemaN2;

    @Column(name = "problema", table = "problemasN2", nullable = false, length = 45)
    @Basic
    private String problema;

    public ProblemasN2() {

    }

    public List<ProblemasN3> getProblemasN3Collection() {
        return this.problemasN3Collection;
    }

    public void setProblemasN3Collection(List<ProblemasN3> problemasN3Collection) {
        this.problemasN3Collection = problemasN3Collection;
    }

    public ProblemasN1 getIdProblemaN1() {
        return this.idProblemaN1;
    }

    public void setIdProblemaN1(ProblemasN1 idProblemaN1) {
        this.idProblemaN1 = idProblemaN1;
    }

    public Integer getIdProblemaN2() {
        return this.idProblemaN2;
    }

    public void setIdProblemaN2(Integer idProblemaN2) {
        this.idProblemaN2 = idProblemaN2;
    }

    public String getProblema() {
        return this.problema;
    }

    public void setProblema(String problema) {
        this.problema = problema;
    }

    @Override
    public String toString() {
        return problema;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 97 * hash + Objects.hashCode(this.idProblemaN2);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final ProblemasN2 other = (ProblemasN2) obj;
        if (!Objects.equals(this.idProblemaN2, other.idProblemaN2)) {
            return false;
        }
        return true;
    }
    
}
