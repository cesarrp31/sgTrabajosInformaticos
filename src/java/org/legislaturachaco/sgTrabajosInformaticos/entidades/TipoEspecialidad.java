//
// This file was generated by the JPA Modeler
//
package org.legislaturachaco.sgTrabajosInformaticos.entidades;

import java.io.Serializable;
import java.util.List;
import java.util.Objects;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

@Entity
@Table(name = "tipoEspecialidad")

public class TipoEspecialidad implements Serializable {
    public static final int LONG_MAX_ESPECIALIDAD= 60;
    
    @OneToMany(targetEntity = Tecnicos.class, mappedBy = "idTipoEspecialidad")
    private List<Tecnicos> tecnicosCollection;

    @Column(name = "especialidad", table = "tipoEspecialidad", nullable = false, length = 60)
    @Basic
    private String especialidad;

    @Column(name = "idTipoEspecialidad", table = "tipoEspecialidad", nullable = false)
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Integer idTipoEspecialidad;

    public TipoEspecialidad() {

    }

    public List<Tecnicos> getTecnicosCollection() {
        return this.tecnicosCollection;
    }

    public void setTecnicosCollection(List<Tecnicos> tecnicosCollection) {
        this.tecnicosCollection = tecnicosCollection;
    }

    public String getEspecialidad() {
        return this.especialidad;
    }

    public void setEspecialidad(String especialidad) {
        this.especialidad = especialidad;
    }

    public Integer getIdTipoEspecialidad() {
        return this.idTipoEspecialidad;
    }

    public void setIdTipoEspecialidad(Integer idTipoEspecialidad) {
        this.idTipoEspecialidad = idTipoEspecialidad;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 59 * hash + Objects.hashCode(this.idTipoEspecialidad);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final TipoEspecialidad other = (TipoEspecialidad) obj;
        if (!Objects.equals(this.idTipoEspecialidad, other.idTipoEspecialidad)) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return especialidad;
    }
     
}
