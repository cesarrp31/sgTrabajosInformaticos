//
// This file was generated by the JPA Modeler
//
package org.legislaturachaco.sgTrabajosInformaticos.entidades;

import java.io.Serializable;
import java.util.List;
import java.util.Objects;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

@Entity
@Table(name = "tipoNota")

public class TipoNota implements Serializable {

    @Column(name = "tipoNota", table = "tipoNota", nullable = false, length = 100)
    @Basic
    private String tipoNota;

    @Column(name = "idTipoNota", table = "tipoNota", nullable = false)
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Integer idTipoNota;

    @OneToMany(targetEntity = Notas.class, mappedBy = "idTipoNota")
    private List<Notas> notasCollection;

    public TipoNota() {

    }

    public String getTipoNota() {
        return this.tipoNota;
    }

    public void setTipoNota(String tipoNota) {
        this.tipoNota = tipoNota;
    }

    public Integer getIdTipoNota() {
        return this.idTipoNota;
    }

    public void setIdTipoNota(Integer idTipoNota) {
        this.idTipoNota = idTipoNota;
    }

    public List<Notas> getNotasCollection() {
        return this.notasCollection;
    }

    public void setNotasCollection(List<Notas> notasCollection) {
        this.notasCollection = notasCollection;
    }

    @Override
    public String toString() {
        return "TipoNota{" + "tipoNota=" + tipoNota + '}';
    }

    @Override
    public int hashCode() {
        int hash = 5;
        hash = 59 * hash + Objects.hashCode(this.idTipoNota);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final TipoNota other = (TipoNota) obj;
        if (!Objects.equals(this.idTipoNota, other.idTipoNota)) {
            return false;
        }
        return true;
    }
}
